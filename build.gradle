
plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version '0.9.28'
}
group = 'it.unifi.cerm'
version = '1.1'

repositories {
    mavenCentral()
    maven {
        url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
    }
}

tasks.withType(JavaCompile) {
    configure(options) {
        options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'  << '-nowarn' // examples
    }
}

jar {
    setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': "FindGeo"
    }

}
tasks.withType(JavaCompile) {
    options.warnings = false
}
dependencies {
    implementation 'openchart:openchart:1.4.2'
    implementation 'org.biojava:biojava-core:7.2.2'
    implementation 'org.biojava:biojava-structure:7.2.2'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'commons-io:commons-io:2.14.0'
    implementation 'gov.nist.math:jama:1.0.3'

}
jar {
    // Will include every single one of your dependencies, project or not
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

graalvmNative {
    agent {
         defaultMode = "standard"
     }
    binaries {
        main {
            imageName = "FindGeo"
            mainClass = "FindGeo"
            buildArgs.add("-O4")
        }
        test {
            buildArgs.add("-O0")
        }
    }
    metadataRepository {
         enabled = true
     }
    binaries.all {
        buildArgs.add('-H:ReflectionConfigurationFiles=/data/development/SpringApplications/FindGeo/META-INF/native-image/reflect-config.json')
        buildArgs.add('--initialize-at-build-time=org.slf4j.slf4j-api,org.apache.commons.logging.LogFactory')
        resources.autodetect()
        buildArgs.add("--verbose")
    }
}
test {
    useJUnitPlatform()
}